	>>> add_integer = __import__("0-add_integer").add_integer

	 >>> add_integer(18, 9)
	 27

	 >>> add_integer(9, -18)
	 -9

	 >>> add_integer(-4, 18)
	 14

	 >>> [add_integer(n, n ** 4) for n in range(5)]
	 [0, 2, 18, 84, 260]

	 >>> add_integer(35.9, 67)
	 102

	 >>> add_integer(40, 37.5)
	 77

	 >>> add_integer(18.67, 24.8)
	 42

	 >>> add_integer(1, 2, 3)
         Traceback (most recent call last):
         ...
         TypeError: add_integer() takes 2 positional arguments but 3 were given

	 >>> add_integer(89, float('nan'))
	 Traceback (most recent call last):
	 ...
	 ValueError: cannot convert float NaN to integer

	 >>> add_integer(999999999999999999999999999999999999999999999, 1)
	 1000000000000000000000000000000000000000000000

	 >>> add_integer([8], 9)
	 Traceback (most recent call last):
	 ...
	 TypeError: a must be an integer

	 >>> add_integer(18, "9")
	 Traceback (most recent call last):
	 ...
	 TypeError: b must be an integer

	 >>> add_integer(1)
	 Traceback (most recent call last):
         ...
	 TypeError: add_integer() missing 1 required positional argument: 'b'

	 >>> add_integer(True, 18)
	 Traceback (most recent call last):
         ...
         TypeError: a must be an integer

	 >>> add_integer(9, False)
         Traceback (most recent call last):
         ...
         TypeError: b must be an integer

	 >>> add_integer()
	 Traceback (most recent call last):
	 ...
	 TypeError: add_integer() missing 2 required positional arguments: 'a' and 'b'


	 >>> add_integer((2,), {"key": "value"})
         Traceback (most recent call last):
         ...
         TypeError: a must be an integer